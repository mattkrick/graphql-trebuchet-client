{"version":3,"sources":["webpack://GQLTrebuchetClient/webpack/bootstrap","webpack://GQLTrebuchetClient/./src/GQLHTTPClient.ts","webpack://GQLTrebuchetClient/./src/GQLTrebuchetClient.ts","webpack://GQLTrebuchetClient/./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {IncomingCompleteMessage, IncomingErrorMessage, OperationPayload} from './GQLTrebuchetClient'\nimport {Sink} from 'relay-runtime/lib/network/RelayObservable'\n\nexport type FetchData = (data: any) => Promise<IncomingErrorMessage | IncomingCompleteMessage>\n\nexport default class GQLHTTPClient {\n  constructor (public fetchData: FetchData) {}\n\n  async fetch (payload: OperationPayload, sink: Sink<any>) {\n    const res = await this.fetchData({type: 'start', payload})\n    sink.next(res.payload)\n    sink.complete()\n  }\n}\n","import {Trebuchet} from '@mattkrick/trebuchet-client'\nimport {Sink} from 'relay-runtime/lib/network/RelayObservable'\n\nexport interface ErrorObj {\n  name: string\n  message: string\n  stack?: string\n}\n\nexport interface OperationPayload {\n  documentId?: string\n  query?: string\n  variables?: {\n    [key: string]: any\n  }\n}\n\nexport interface GraphQLData {\n  [key: string]: any\n}\n\nexport interface GraphQLResult {\n  data?: GraphQLData\n  errors?: Array<ErrorObj>\n}\n\nexport interface Operation<T = any> {\n  id: string\n  payload: OperationPayload\n  sink: Sink<T>\n}\n\nexport interface Operations {\n  [id: string]: Operation\n}\n\nexport type OutgoingMessage = StartMessage | StopMessage\n\nexport interface StartMessage {\n  type: 'start'\n  id?: string\n  payload: OperationPayload\n  connectionId?: string\n}\n\nexport interface StopMessage {\n  type: 'stop'\n  id: string\n  connectionId?: string\n}\n\nexport interface IncomingDataMessage {\n  id: string\n  type: 'data'\n  payload: GraphQLResult\n}\n\nexport interface IncomingErrorMessage {\n  id: string\n  type: 'error'\n  payload: {errors: Array<ErrorObj>}\n}\nexport interface IncomingCompleteMessage {\n  id: string\n  type: 'complete'\n  payload: GraphQLResult\n}\n\nexport type IncomingMessage = IncomingCompleteMessage | IncomingDataMessage | IncomingErrorMessage\n\nclass GQLTrebuchetClient {\n  operations: Operations = {}\n  private nextOperationId: number = 0\n\n  constructor (public trebuchet: Trebuchet) {\n    trebuchet.on('data', (data) => {\n      this.dispatch((data as unknown) as IncomingMessage)\n    })\n    trebuchet.on('reconnected', () => {\n      Object.keys(this.operations).forEach((opId) => {\n        this.trebuchet.send({\n          id: opId,\n          type: 'start',\n          payload: this.operations[opId].payload\n        })\n      })\n    })\n  }\n\n  private dispatch (message: IncomingMessage) {\n    const {id: opId} = message\n    const operation = this.operations[opId]\n    if (!operation) return\n    const {sink} = operation\n    switch (message.type) {\n      case 'complete':\n        delete this.operations[opId]\n        if (message.payload) {\n          sink.next(message.payload)\n        }\n        sink.complete()\n        break\n      case 'error':\n        delete this.operations[opId]\n        const {errors} = message.payload\n        const [firstError] = errors\n        sink.error(firstError)\n        break\n      case 'data':\n        sink.next(message.payload)\n    }\n  }\n\n  private generateOperationId () {\n    return String(++this.nextOperationId)\n  }\n\n  private unsubscribe (opId: string) {\n    if (this.operations[opId]) {\n      delete this.operations[opId]\n      this.trebuchet.send({id: opId, type: 'stop'})\n    }\n  }\n\n  close (reason?: string) {\n    Object.keys(this.operations).forEach((opId) => {\n      this.unsubscribe(opId)\n    })\n    this.trebuchet.close(reason)\n  }\n\n  fetch<T = any> (payload: OperationPayload, sink?: Sink<T>) {\n    if (sink) {\n      const opId = this.generateOperationId()\n      this.operations[opId] = {\n        id: opId,\n        payload,\n        sink\n      }\n      this.trebuchet.send({id: opId, type: 'start', payload})\n    } else {\n      this.trebuchet.send({type: 'start', payload})\n    }\n  }\n\n  subscribe<T = any> (payload: OperationPayload, sink: Sink<T>) {\n    const opId = this.generateOperationId()\n    this.operations[opId] = {\n      id: opId,\n      payload,\n      sink\n    }\n    this.trebuchet.send({id: opId, type: 'start', payload})\n\n    const unsubscribe = () => {\n      this.unsubscribe(opId)\n    }\n    return {unsubscribe}\n  }\n}\n\nexport default GQLTrebuchetClient\n","export {default as GQLHTTPClient} from './GQLHTTPClient'\nexport {default} from './GQLTrebuchetClient'\n\n// constants\nexport * from './GQLTrebuchetClient'\n"],"sourceRoot":""}