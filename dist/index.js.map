{"version":3,"sources":["webpack://GQLTrebuchetClient/webpack/bootstrap","webpack://GQLTrebuchetClient/./src/GQLHTTPClient.ts","webpack://GQLTrebuchetClient/./src/GQLTrebuchetClient.ts","webpack://GQLTrebuchetClient/./src/index.ts","webpack://GQLTrebuchetClient/external \"@mattkrick/trebuchet-client\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {ServerMessageTypes, IncomingMessage, OperationPayload} from './GQLTrebuchetClient'\n\ntype BasicStartMessageString = string\n\nexport type FetchData = (data: BasicStartMessageString) => Promise<IncomingMessage>\n\nclass GQLHTTPClient {\n  constructor (public fetchData: FetchData) {}\n\n  async fetch (operationPayload: OperationPayload) {\n    const res = await this.fetchData(\n      JSON.stringify({type: ServerMessageTypes.GQL_START, payload: operationPayload})\n    )\n    return res.payload\n  }\n}\nexport default GQLHTTPClient\n","import {Events, Trebuchet} from '@mattkrick/trebuchet-client'\n\nexport enum ServerMessageTypes {\n  GQL_START = 'start',\n  GQL_STOP = 'stop'\n}\n\nexport enum ClientMessageTypes {\n  GQL_DATA = 'data',\n  GQL_ERROR = 'error',\n  GQL_COMPLETE = 'complete'\n}\n\nexport interface ErrorObj {\n  name: string\n  message: string\n  stack?: string\n}\n\nexport interface OperationPayload {\n  documentId?: string\n  query?: string\n  variables?: {\n    [key: string]: any\n  }\n}\n\nexport interface GraphQLData {\n  [key: string]: any\n}\n\nexport interface GraphQLResult {\n  data?: GraphQLData\n  errors?: Array<ErrorObj>\n}\n\nexport interface Observer {\n  onNext: (result: {[key: string]: any}) => void\n  onError: (error: Array<ErrorObj>) => void\n  onCompleted: () => void\n}\n\nexport interface Operation {\n  id: string\n  payload: OperationPayload\n  observer: Observer\n}\n\nexport interface Operations {\n  [id: string]: Operation\n}\n\nexport type OutgoingMessage = StartMessage | StopMessage\n\nexport interface StartMessage {\n  type: ServerMessageTypes.GQL_START\n  id?: string\n  payload: OperationPayload\n  connectionId?: string\n}\n\nexport interface StopMessage {\n  type: ServerMessageTypes.GQL_STOP\n  id: string\n  connectionId?: string\n}\n\nexport interface IncomingMessage {\n  id: string\n  type: ClientMessageTypes\n  payload: GraphQLResult\n}\n\nclass GQLTrebuchetClient {\n  isTrebuchetClosed: boolean = false\n  operations: Operations = {}\n  private nextOperationId: number = 0\n\n  constructor(public trebuchet: Trebuchet) {\n    trebuchet.on(Events.DATA, (data: string | object) => {\n      this.dispatch(typeof data === 'string' ? JSON.parse(data) : data)\n    })\n    trebuchet.on(Events.CLOSE, ({reason}: {reason?: string}) => {\n      this.isTrebuchetClosed = true\n      this.close(reason)\n    })\n    trebuchet.on(Events.TRANSPORT_DISCONNECTED, () => {\n      // queue up the start subscription messages\n      Object.keys(this.operations).forEach((opId) => {\n        this.send({\n          id: opId,\n          type: ServerMessageTypes.GQL_START,\n          payload: this.operations[opId].payload\n        })\n      })\n    })\n  }\n\n  private dispatch(message: IncomingMessage) {\n    const {id: opId} = message\n    if (!this.operations[opId]) {\n      this.unsubscribe(opId)\n      return\n    }\n    const {onCompleted, onError, onNext} = this.operations[opId].observer\n    switch (message.type) {\n      case ClientMessageTypes.GQL_COMPLETE:\n        onCompleted()\n        delete this.operations[opId]\n        break\n\n      case ClientMessageTypes.GQL_ERROR:\n        onError(message.payload.errors!)\n        delete this.operations[opId]\n        break\n\n      case ClientMessageTypes.GQL_DATA:\n        onNext(message.payload)\n    }\n  }\n\n  private generateOperationId() {\n    return String(++this.nextOperationId)\n  }\n\n  private send(message: OutgoingMessage) {\n    this.trebuchet.send(JSON.stringify(message))\n  }\n\n  close(reason?: string) {\n    Object.keys(this.operations).forEach((opId) => {\n      this.unsubscribe(opId)\n    })\n    if (!this.isTrebuchetClosed) {\n      this.trebuchet.close(reason)\n    }\n  }\n\n  fetch(payload: OperationPayload) {\n    return new Promise((resolve, reject) => {\n      const opId = this.generateOperationId()\n      this.operations[opId] = {\n        id: opId,\n        payload,\n        observer: {\n          onNext: (result) => {\n            delete this.operations[opId]\n            resolve(result)\n          },\n          onError: (errors) => {\n            delete this.operations[opId]\n            // no UI needs to handle a possible array of cryptic errors. change my mind\n            const firstError = Array.isArray(errors) ? errors[0] : errors\n            reject(firstError.message || firstError)\n          },\n          onCompleted: () => {\n            // server should never send this for a fetch\n            delete this.operations[opId]\n          }\n        }\n      }\n      this.send({id: opId, type: ServerMessageTypes.GQL_START, payload})\n    })\n  }\n\n  subscribe(payload: OperationPayload, observer: Observer) {\n    const opId = this.generateOperationId()\n    this.operations[opId] = {\n      id: opId,\n      payload,\n      observer\n    }\n    this.send({id: opId, type: ServerMessageTypes.GQL_START, payload})\n    const unsubscribe = () => {\n      this.unsubscribe(opId)\n    }\n    return {unsubscribe}\n  }\n\n  private unsubscribe(opId: string) {\n    if (this.operations[opId]) {\n      delete this.operations[opId]\n      this.send({id: opId, type: ServerMessageTypes.GQL_STOP})\n    }\n  }\n}\n\nexport default GQLTrebuchetClient\n","export {default as GQLHTTPClient} from './GQLHTTPClient'\nexport {default} from './GQLTrebuchetClient'\n\n// constants\nexport * from './GQLTrebuchetClient'\n","module.exports = require(\"@mattkrick/trebuchet-client\");"],"sourceRoot":""}